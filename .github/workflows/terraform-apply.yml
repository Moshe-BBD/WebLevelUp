name: "Deploy Terraform"

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'DB/infrastructure/**'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    outputs:
      rds_endpoint: ${{ steps.save_rds_endpoint.outputs.rds_endpoint }}
    env:
      TF_VAR_DB_USERNAME: ${{ secrets.DB_USERNAME }}
      TF_VAR_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      TF_VAR_AWS_REGION: ${{ secrets.AWS_REGION }}
    defaults:
      run:
        shell: bash
        working-directory: DB/infrastructure
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GITHUB_ACTION_RDS
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Validate Identity with AWS
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform
        id: init
        run: terraform init

      - name: Generate infrastructure plan
        id: plan
        run: terraform plan -out=.tfplan

      - name: Apply infrastructure plan
        id: apply
        run: terraform apply .tfplan

      - name: Save RDS Endpoint
        id: save_rds_endpoint
        run: |
          echo "::set-output name=rds_endpoint::$(terraform output -json rds_endpoint)"

  save-rds-endpoint-secret:
    needs: deploy-infrastructure
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Set RDS Endpoint as Secret
        run: echo "${{ needs.deploy-infrastructure.outputs.rds_endpoint }}" | gh secret set AWS_RDS_ENDPOINT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
